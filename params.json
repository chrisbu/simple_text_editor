{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"","body":"# Simple text editor\r\n\r\nYou can use this in your own code by adding the following pub dependency:\r\n\r\n    dependencies: \r\n       simple_text_editor:\r\n          git: git://github.com/chrisbu/simple_text_editor.git\r\n\r\n\r\nIn your code, you can either initialize it at the time of construction, or attach it to a DOM element using the `attachTo(el)` method:\r\n\r\n    // use this style...\r\n    var st = new SimpleTextEditor(\r\n        attachTo:query(\"#container1\"),\r\n        showRawText:true,\r\n        text:\"<b>Editor</b> created with constructor\");  \r\n  \r\n    // or this style\r\n    var st1 = new SimpleTextEditor();\r\n    st1.showRawText = true;\r\n    st1.attach(query(\"#container2\"));\r\n    st1.rawText = \"<b>Editor</b> created with properties and methods\";\r\n\r\nThis editor also contains an optional `TextArea` element to show the raw html.  This updates as you type into the editable div (it also works in reverse).\r\n\r\nI've used the following CSS on my screenshot.  You will need to specify your own widths and heights as appropriate for your scenario:\r\n\r\n\t.texteditor {\r\n\t  width: 450px;\r\n\t  height: 400px;\r\n\t  margin: 3px;\r\n\t  padding: 3px; \r\n\t}\r\n\t\r\n\t.rawtextarea {\r\n\t  width: 430px;\r\n\t  height: 100px;\r\n\t  margin: 3px;\r\n\t  padding: 3px;\r\n\t}\r\n\t\r\n\t.toolbar { }\r\n\t\r\n\t.editbox {\r\n\t  width: 430px;\r\n\t  height: 200px;\r\n\t  padding: 3px;\r\n\t  margin: 3px;\r\n\t  border: 2px solid black;  \r\n\t}\r\n\r\n## Next Steps...\r\n\r\nWell, the obvious next step is to turn it into a [**Web UI**](http://www.dartlang.org/articles/dart-web-components/) component.  ","name":"Simple text editor","google":""}